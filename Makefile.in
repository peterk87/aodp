# Makefile.  Generated from Makefile.in by configure.
##==================================================================
## NOTE: if you would like to do a manual configuration, use
## the original Makefile (Makefile.manual) and make your own changes
## This is also your option if running ./configure does not work
##==================================================================

#-------------------------------------------
#	configuration variables
#-------------------------------------------
CXX=@CXX@

CXXFLAGS=@CXXFLAGS@

PERL=@PERL@

HAS_BISON_2_7=@HAS_BISON_2_7@
HAS_FLEX_2_5=@HAS_FLEX_2_5@

# If you want to run flex/bison, make sure they are in your path
BISON=@BISON@
FLEX=@FLEX@

# target (installation) directories
BIN_TARGET_DIR=@BIN_TARGET_DIR@
MAN_TARGET_DIR=@MAN_TARGET_DIR@

#-------------------------------------------
#	make variables
#-------------------------------------------

CXX_ALL_FLAGS= $(CXXFLAGS) -Wall

LIBS= -pthread

# no-write-strings is needed for removing warning from code generated by bison
CXX_Y_FLAGS= -Wno-write-strings

# Directory containing scanner files (flex)
LDIR= ly
# Directory containing grammar files (bison)
YDIR= ly
# Directory containing c++ code files
CXXDIR= c
# Directory containing header files
HDIR= h
# Directory containing "main()" files. Each file will generate a binary
MAINDIR= main
# Directory for object files
OBJDIR= o
# Directory for binaries
BINDIR= b
# directory for man pages
MANDIR=man
# directory for perl utilities
PERL_DIR= pl

# Binaries
BIN=$(basename $(notdir $(wildcard $(MAINDIR)/*)))

BINARIES=$(addprefix $(BINDIR)/,$(BIN))

# Flex/Bison souces (Lex/Yacc)
L=$(wildcard $(LDIR)/*.l)
Y=$(wildcard $(YDIR)/*.y)

# Generated C++ files and headers from Flex/Bison sources
LCXX=$(addsuffix .cpp,$(L))
YCXX=$(addsuffix .cpp,$(Y))
YHPP=$(addsuffix .hpp,$(Y))

# C++ sources and headers
SRC=$(wildcard $(CXXDIR)/*.cpp)
H=$(wildcard $(HDIR)/*.h)

# Common C++ files, including the generated ones
CXXSRC= $(SRC) $(YCXX) $(LCXX)

# object files for each of the categories of c++ sources

CXXOBJ=	$(addsuffix .o,$(addprefix $(OBJDIR)/,$(notdir $(basename  $(SRC)))))
# object files of sources generated by Bison end in .y.o
YOBJ=	$(addsuffix .o,$(addprefix $(OBJDIR)/,$(notdir $(basename $(YCXX)))))
# object files of sources generated by FLex end in .l.o
LOBJ=	$(addsuffix .o,$(addprefix $(OBJDIR)/,$(notdir $(basename $(LCXX)))))
# object files of sources with main() end in .m.o
MAINOBJ=$(addsuffix .m.o,$(addprefix $(OBJDIR)/,$(BIN)))

# all object files
OBJ= $(CXXOBJ) $(MAINOBJ) $(YOBJ) $(LOBJ)

# include
INCLUDEDIR= $(HDIR) $(YDIR)
INCLUDE= $(addprefix -I,$(INCLUDEDIR))

# man sources
MAN_SOURCE= $(wildcard $(MANDIR)/*.1.gz)
MAN= $(notdir $(MAN_SOURCE))

# perl utilities
PERL_UTIL= $(notdir $(wildcard $(PERL_DIR)/*))

# Install targets
BIN_TARGET= $(addprefix $(BIN_TARGET_DIR)/,$(BIN))
MAN_TARGET= $(addprefix $(MAN_TARGET_DIR)/,$(MAN))
PERL_TARGET=  $(addprefix $(BIN_TARGET_DIR)/,$(PERL_UTIL))

## TARGETS
all: $(BINARIES)

.SECONDARY:
$(BINDIR)/% : $(OBJDIR)/%.m.o $(YOBJ) $(LOBJ) $(CXXOBJ)
	$(CXX) -o $@ $< $(YOBJ) $(LOBJ) $(CXXOBJ) $(LIBS)

$(OBJDIR)/%.m.o: $(MAINDIR)/%.cpp $(YHPP)  $(H)
	$(CXX) -c $(CXX_ALL_FLAGS) -o $@ $< $(INCLUDE)

$(OBJDIR)/%.y.o: $(YDIR)/%.y.cpp  $(H)
	$(CXX) -c $(CXX_ALL_FLAGS) $(CXX_Y_FLAGS) -o $@ $< $(INCLUDE)

$(OBJDIR)/%.l.o: $(LDIR)/%.l.cpp $(YDIR)/%.y.hpp  $(H)
	$(CXX) -c $(CXX_ALL_FLAGS) -o $@ $< $(INCLUDE)

# Pass the target directory for manpages to the Application (call to --help)
$(OBJDIR)/Application.o: $(CXXDIR)/Application.cpp $(YHPP) $(H)
	$(CXX) -DMAN_TARGET_DIR="\"$(MAN_TARGET_DIR)\"" -DBIN_TARGET_DIR="\"$(BIN_TARGET_DIR)\"" -c $(CXX_ALL_FLAGS) -o $@ $< $(INCLUDE)

$(OBJDIR)/%.o: $(CXXDIR)/%.cpp $(YHPP) $(H)
	$(CXX) -c $(CXX_ALL_FLAGS) -o $@ $< $(INCLUDE)

# INTERMEDIARY C++ FILES
# - these come prebuilt in the distribution
# - you need flex 2.5+  and bison 2.7+ installed to rebuild these
$(LDIR)/%.l.cpp:  $(LDIR)/%.l
ifeq (x$(HAS_FLEX_2_5),xno)
	@echo "*** Needs flex 2.5+ to re-generate scanner sources"
	@echo "*** Install flex and then run ./configure again"
	@echo "*** Alternately, use the generated sources from the original distribution"
	@exit 1
else
	$(FLEX) -o $@ $<
endif

$(YDIR)/%.y.cpp  $(YDIR)/%.y.hpp: $(YDIR)/%.y
ifeq (x$(HAS_BISON_2_7),xno)
	@echo "*** Needs bison 2.7+ to re-generate grammar sources"
	@echo "*** Install bison and then run ./configure again"
	@echo "*** Alternately, use the generated sources from the original distribution"
	@exit 1
else
	$(BISON) -d -o $(YDIR)/$*.y.cpp $<
endif

.PHONY: uninstall install-pl install-bin install-man install clean cleaner

## WHAT IT SAYS
## NOTE: does not remove output from flex and bison
## - useful for building on systems without flex/bison
clean:
	@rm -f $(BINARIES) $(OBJ)

## REMOVE ALL INTERMEDIATE FILES
## WARNING: REMOVES output from flex and bison
## - if you don't have flex 2.5+  and bison 2.7+ installed, you will not be able to rebuild!
cleaner:
	@rm -f $(LCXX) $(YCXX) $(YHPP)
	@rm -f $(BINARIES) $(OBJ)

install:install-bin install-man install-pl

# install binaries
install-bin: $(BIN_TARGET)

$(BIN_TARGET_DIR)/%: $(BINDIR)/%
	cp $(BINDIR)/$(@F) $(BIN_TARGET_DIR)/$(@F)

# install manpages
install-man: $(MAN_TARGET)

$(MAN_TARGET_DIR)/%: $(MANDIR)/%
	cp $(MANDIR)/$(@F) $(MAN_TARGET_DIR)/$(@F)

# install perl utilities
install-pl: $(PERL_TARGET)

$(BIN_TARGET_DIR)/%: $(PERL_DIR)/%
	cp $(PERL_DIR)/$(@F) $(BIN_TARGET_DIR)/$(@F)

uninstall:
# uninstall binaries
	rm -f $(BIN_TARGET)
# uninstall manpages
	rm -f $(MAN_TARGET)
# uninstall perl utilities
	rm -f $(PERL_TARGET)

# This file is part of aodp (the Automated Oligonucleotide Design Pipeline)
# 
# (C)	HER MAJESTY THE QUEEN IN RIGHT OF CANADA (2014)
# (C)	Manuel Zahariev mz@alumni.sfu.ca (2000-2008, 2014)
# 
# aodp is free software: you can redistribute it and/or
# modify it under the terms of version 3 of the GNU General Public
# License as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License (version 3) for more details.
# 
# You should have received a copy of the GNU General Public License
# (version 3) along with this program. If not, see
# http://www.gnu.org/licenses/.
